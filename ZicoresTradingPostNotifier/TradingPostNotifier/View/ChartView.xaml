<UserControl x:Class="ZicoresTradingPostNotifier.View.ChartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:my="clr-namespace:ZicoresTradingPostNotifier.View"
             xmlns:c="clr-namespace:ZicoresTradingPostNotifier.Controls"
             xmlns:local="clr-namespace:LibraryBase.Wpf.Converter;assembly=LibraryBaseWpf"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:b="clr-namespace:LibraryBase.Wpf.Behaviour;assembly=LibraryBaseWpf"
             xmlns:l="clr-namespace:ZicoresTradingPostNotifier.Controls"
             xmlns:d3="http://research.microsoft.com/DynamicDataDisplay/1.0"
             mc:Ignorable="d"
             xmlns:chart="clr-namespace:ZicoresTradingPostNotifier.Chart"
             d:DesignHeight="300" d:DesignWidth="800">

    <UserControl.Resources>

        <local:IsNegativeValueConverter x:Key="isNegativeConverter" />

        <Style x:Key="BorderedItem" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border Name="Border" BorderBrush="LightGray" BorderThickness="0,0,0,2">
                            <GridViewRowPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Explorer-style layout-->
        <DataTemplate x:Key="ExplorerView">
            <StackPanel Orientation="Horizontal" Height="Auto" Width="150">

                <StackPanel VerticalAlignment="Center" Width="90">
                    <TextBlock Text="{Binding Path=Value.AppConfig.Appli.AppName}" 
                     FontSize="13" HorizontalAlignment="Left" TextWrapping="WrapWithOverflow"
                     Margin="0,0,0,1" />
                    <TextBlock Text="{Binding Path=Value.AppConfig.Appli.AppType}" FontSize="9" 
                     HorizontalAlignment="Left" Margin="0,0,0,1" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>

        <!-- Group header style-->
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">

                        <Expander x:Name="exp" IsExpanded="True" Width="310"
                                   BorderBrush="CornflowerBlue">

                            <Expander.Header>
                                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                        Background="CornflowerBlue" x:Name="expContent"
                                        Width="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor, AncestorType={x:Type Expander}},
                                            Path=Width}"
                                        Height="{Binding RelativeSource={RelativeSource
                                            Mode=FindAncestor, AncestorType={x:Type ToggleButton}},
                                            Path=ActualHeight}">
                                    <CheckBox IsChecked="False" DockPanel.Dock="Right"/>
                                    <TextBlock Text="{Binding Path=Name}" Foreground="White"
                                           FontWeight="Bold" HorizontalAlignment="Center" />
                                </DockPanel>
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="RedHighlight" Color="#FFFFC7CE"></SolidColorBrush>
        <SolidColorBrush x:Key="GreenHighlight" Color="LightGreen"></SolidColorBrush>

        <Style TargetType="{x:Type Border}" x:Key="BorderHighlight">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Converter={StaticResource isNegativeConverter}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource RedHighlight}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Converter={StaticResource isNegativeConverter}}" Value="False">
                    <Setter Property="Background" Value="{StaticResource GreenHighlight}"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="BorderHighlightMoney">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=TotalCopper, Converter={StaticResource isNegativeConverter}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource RedHighlight}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TotalCopper, Converter={StaticResource isNegativeConverter}}" Value="False">
                    <Setter Property="Background" Value="{StaticResource GreenHighlight}"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="WayHighlight">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsCraftBestWay}" Value="True">
                    <Setter Property="Background" Value="{StaticResource GreenHighlight}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsCraftBestWay}" Value="False">
                    <Setter Property="Background" Value="{StaticResource RedHighlight}"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Border}" x:Key="WayHighlightReverse">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsCraftBestWay}" Value="False">
                    <Setter Property="Background" Value="{StaticResource GreenHighlight}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsCraftBestWay}" Value="True">
                    <Setter Property="Background" Value="{StaticResource RedHighlight}"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <chart:MoneyLabelProvider x:Key="MoneyLabelProvider"></chart:MoneyLabelProvider>

    </UserControl.Resources>

    <Grid x:Name="outerGrid" DataContext="{Binding}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <d3:ChartPlotter x:Name="plotter" Grid.Row="1" Background="WhiteSmoke">
            <d3:ChartPlotter.HorizontalAxis>
                <d3:HorizontalDateTimeAxis Name="dateAxis"/>
            </d3:ChartPlotter.HorizontalAxis>
            
                <d3:VerticalIntegerAxis Name="countAxis" LabelProvider="{StaticResource MoneyLabelProvider}">
                </d3:VerticalIntegerAxis>

            <d3:Header FontFamily="Arial" FontSize="14" FontWeight="Bold" Foreground="DarkGreen" Content="Realtime Chart"/>
            
            <d3:VerticalAxisTitle FontFamily="Arial" Content="Money">
            </d3:VerticalAxisTitle>
            <d3:HorizontalAxisTitle FontFamily="Arial" Content="Date"/>
        </d3:ChartPlotter>
    </Grid>
</UserControl>

